//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inv.DAL.Domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InvEntities : DbContext
    {
        public InvEntities()
            : base("name=InvEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<A_D_VAT_TYPE> A_D_VAT_TYPE { get; set; }
        public virtual DbSet<A_PERIOD> A_PERIOD { get; set; }
        public virtual DbSet<A_Rec_D_DiscountPlan> A_Rec_D_DiscountPlan { get; set; }
        public virtual DbSet<A_Rec_D_DiscountPlanSegment> A_Rec_D_DiscountPlanSegment { get; set; }
        public virtual DbSet<A_RecPay_D_Accounts> A_RecPay_D_Accounts { get; set; }
        public virtual DbSet<A_RecPay_D_AjustmentType> A_RecPay_D_AjustmentType { get; set; }
        public virtual DbSet<A_RecPay_D_CashBox> A_RecPay_D_CashBox { get; set; }
        public virtual DbSet<A_RecPay_D_Category> A_RecPay_D_Category { get; set; }
        public virtual DbSet<A_RecPay_D_Group> A_RecPay_D_Group { get; set; }
        public virtual DbSet<A_RecPay_Tr_Adjustment> A_RecPay_Tr_Adjustment { get; set; }
        public virtual DbSet<A_RecPay_Tr_ReceiptNote> A_RecPay_Tr_ReceiptNote { get; set; }
        public virtual DbSet<G_AlertControl> G_AlertControl { get; set; }
        public virtual DbSet<G_AlertLog> G_AlertLog { get; set; }
        public virtual DbSet<G_AlertType> G_AlertType { get; set; }
        public virtual DbSet<G_BRANCH> G_BRANCH { get; set; }
        public virtual DbSet<G_Codes> G_Codes { get; set; }
        public virtual DbSet<G_COMPANY> G_COMPANY { get; set; }
        public virtual DbSet<G_ModuleHelp> G_ModuleHelp { get; set; }
        public virtual DbSet<G_MODULES> G_MODULES { get; set; }
        public virtual DbSet<G_News> G_News { get; set; }
        public virtual DbSet<G_Noteifications> G_Noteifications { get; set; }
        public virtual DbSet<G_NotificationCompany> G_NotificationCompany { get; set; }
        public virtual DbSet<G_REGION> G_REGION { get; set; }
        public virtual DbSet<G_REGION_BRANCH> G_REGION_BRANCH { get; set; }
        public virtual DbSet<G_SearchForm> G_SearchForm { get; set; }
        public virtual DbSet<G_SearchFormModule> G_SearchFormModule { get; set; }
        public virtual DbSet<G_SearchFormSetting> G_SearchFormSetting { get; set; }
        public virtual DbSet<G_STORE> G_STORE { get; set; }
        public virtual DbSet<G_SUB_SYSTEMS> G_SUB_SYSTEMS { get; set; }
        public virtual DbSet<G_SYSTEM> G_SYSTEM { get; set; }
        public virtual DbSet<G_TransCounter> G_TransCounter { get; set; }
        public virtual DbSet<G_TransCounterSetting> G_TransCounterSetting { get; set; }
        public virtual DbSet<G_USER_BRANCH> G_USER_BRANCH { get; set; }
        public virtual DbSet<G_USER_COMPANY> G_USER_COMPANY { get; set; }
        public virtual DbSet<G_USER_LOG> G_USER_LOG { get; set; }
        public virtual DbSet<I_D_Category> I_D_Category { get; set; }
        public virtual DbSet<I_D_Specification> I_D_Specification { get; set; }
        public virtual DbSet<I_D_SpecificationValues> I_D_SpecificationValues { get; set; }
        public virtual DbSet<I_D_UnitGroup> I_D_UnitGroup { get; set; }
        public virtual DbSet<I_D_UOM> I_D_UOM { get; set; }
        public virtual DbSet<I_G_CostMethods> I_G_CostMethods { get; set; }
        public virtual DbSet<I_G_ItemType> I_G_ItemType { get; set; }
        public virtual DbSet<I_G_StockMethods> I_G_StockMethods { get; set; }
        public virtual DbSet<I_ItemBatch> I_ItemBatch { get; set; }
        public virtual DbSet<I_ItemFamily> I_ItemFamily { get; set; }
        public virtual DbSet<I_ItemSpecsValue> I_ItemSpecsValue { get; set; }
        public virtual DbSet<I_ItemStore> I_ItemStore { get; set; }
        public virtual DbSet<I_ItemStoreBatch> I_ItemStoreBatch { get; set; }
        public virtual DbSet<I_Pur_D_Charges> I_Pur_D_Charges { get; set; }
        public virtual DbSet<I_Pur_TR_ReceiveItems> I_Pur_TR_ReceiveItems { get; set; }
        public virtual DbSet<I_Sls_TR_Invoice> I_Sls_TR_Invoice { get; set; }
        public virtual DbSet<I_Sls_TR_InvoiceItems> I_Sls_TR_InvoiceItems { get; set; }
        public virtual DbSet<HIJRA_CONVERT> HIJRA_CONVERT { get; set; }
        public virtual DbSet<GQ_GetUserBranch> GQ_GetUserBranch { get; set; }
        public virtual DbSet<GQ_GetUserModule> GQ_GetUserModule { get; set; }
        public virtual DbSet<GQ_Notifications> GQ_Notifications { get; set; }
        public virtual DbSet<I_VW_GetCompStatus> I_VW_GetCompStatus { get; set; }
        public virtual DbSet<IQ_GetBoxAdjustmentList> IQ_GetBoxAdjustmentList { get; set; }
        public virtual DbSet<IQ_GetBoxAdjustmentVat> IQ_GetBoxAdjustmentVat { get; set; }
        public virtual DbSet<IQ_GetBoxReceiveList> IQ_GetBoxReceiveList { get; set; }
        public virtual DbSet<IQ_GetPurChargeInfo> IQ_GetPurChargeInfo { get; set; }
        public virtual DbSet<IQ_GetPurReceiveCharge> IQ_GetPurReceiveCharge { get; set; }
        public virtual DbSet<IQ_GetPurReceiveChargeSum> IQ_GetPurReceiveChargeSum { get; set; }
        public virtual DbSet<IQ_GetPurReceiveItem> IQ_GetPurReceiveItem { get; set; }
        public virtual DbSet<IQ_GetSlsInvoiceItem> IQ_GetSlsInvoiceItem { get; set; }
        public virtual DbSet<I_Pur_TR_Receive> I_Pur_TR_Receive { get; set; }
        public virtual DbSet<G_ReportWebSetting> G_ReportWebSetting { get; set; }
        public virtual DbSet<GQ_ReportWebSetting> GQ_ReportWebSetting { get; set; }
        public virtual DbSet<IQ_GetPurReceiveList> IQ_GetPurReceiveList { get; set; }
        public virtual DbSet<IQ_GetPurReceiveStaistic> IQ_GetPurReceiveStaistic { get; set; }
        public virtual DbSet<I_TR_Operation> I_TR_Operation { get; set; }
        public virtual DbSet<I_TR_OperationDeposit> I_TR_OperationDeposit { get; set; }
        public virtual DbSet<I_TR_OperationItems> I_TR_OperationItems { get; set; }
        public virtual DbSet<IQ_GetOperation> IQ_GetOperation { get; set; }
        public virtual DbSet<IQ_GetOperationCharges> IQ_GetOperationCharges { get; set; }
        public virtual DbSet<G_Role> G_Role { get; set; }
        public virtual DbSet<G_RoleModule> G_RoleModule { get; set; }
        public virtual DbSet<G_RoleUsers> G_RoleUsers { get; set; }
        public virtual DbSet<G_USERS> G_USERS { get; set; }
        public virtual DbSet<GQ_GetUserRole> GQ_GetUserRole { get; set; }
        public virtual DbSet<GQ_GetUsers> GQ_GetUsers { get; set; }
        public virtual DbSet<I_Pur_Tr_ReceiveCharges> I_Pur_Tr_ReceiveCharges { get; set; }
        public virtual DbSet<I_TR_OperationCharges> I_TR_OperationCharges { get; set; }
        public virtual DbSet<A_Voucher_Types> A_Voucher_Types { get; set; }
        public virtual DbSet<AQ_GetJournalHeader> AQ_GetJournalHeader { get; set; }
        public virtual DbSet<A_TmpVoucherProcess> A_TmpVoucherProcess { get; set; }
        public virtual DbSet<A_JOURNAL_HEADER> A_JOURNAL_HEADER { get; set; }
        public virtual DbSet<A_TR_VchrTemplate> A_TR_VchrTemplate { get; set; }
        public virtual DbSet<A_TR_VchrTemplateDetail> A_TR_VchrTemplateDetail { get; set; }
        public virtual DbSet<AQ_GetVchrTemplateDetail> AQ_GetVchrTemplateDetail { get; set; }
        public virtual DbSet<G_CONTROL> G_CONTROL { get; set; }
        public virtual DbSet<A_ACCOUNT_YEAR> A_ACCOUNT_YEAR { get; set; }
        public virtual DbSet<I_ItemYear> I_ItemYear { get; set; }
        public virtual DbSet<A_ACCOUNT> A_ACCOUNT { get; set; }
        public virtual DbSet<I_Item> I_Item { get; set; }
        public virtual DbSet<AQ_GetAccount> AQ_GetAccount { get; set; }
        public virtual DbSet<IQ_GetOperationItemInfo> IQ_GetOperationItemInfo { get; set; }
        public virtual DbSet<G_LnkVar> G_LnkVar { get; set; }
        public virtual DbSet<G_LnkVarBranch> G_LnkVarBranch { get; set; }
        public virtual DbSet<I_Sls_D_Salesman> I_Sls_D_Salesman { get; set; }
        public virtual DbSet<IQ_GetSalesMan> IQ_GetSalesMan { get; set; }
        public virtual DbSet<G_COST_CENTER> G_COST_CENTER { get; set; }
        public virtual DbSet<G_LnkTrans> G_LnkTrans { get; set; }
        public virtual DbSet<G_LnkTrans_TempVchr> G_LnkTrans_TempVchr { get; set; }
        public virtual DbSet<G_LnkTransVariable> G_LnkTransVariable { get; set; }
        public virtual DbSet<G_LnkTrans_Temp> G_LnkTrans_Temp { get; set; }
        public virtual DbSet<I_Stk_TR_Transfer> I_Stk_TR_Transfer { get; set; }
        public virtual DbSet<I_Stk_TR_TransferDetails> I_Stk_TR_TransferDetails { get; set; }
        public virtual DbSet<IQ_GetTransfer> IQ_GetTransfer { get; set; }
        public virtual DbSet<IQ_GetTransferDetail> IQ_GetTransferDetail { get; set; }
        public virtual DbSet<GQ_GetUserBarnchAccess> GQ_GetUserBarnchAccess { get; set; }
        public virtual DbSet<I_Stk_TR_Adjust> I_Stk_TR_Adjust { get; set; }
        public virtual DbSet<IQ_GetStkAdjust> IQ_GetStkAdjust { get; set; }
        public virtual DbSet<IQ_GetStkAdjustDetail> IQ_GetStkAdjustDetail { get; set; }
        public virtual DbSet<I_Stk_Tr_AdjustDetails> I_Stk_Tr_AdjustDetails { get; set; }
        public virtual DbSet<I_Pur_Tr_PurchaseOrder> I_Pur_Tr_PurchaseOrder { get; set; }
        public virtual DbSet<I_Pur_Tr_PurchaseOrderDetail> I_Pur_Tr_PurchaseOrderDetail { get; set; }
        public virtual DbSet<IQ_GetPurchaseOrder> IQ_GetPurchaseOrder { get; set; }
        public virtual DbSet<IQ_GetPurchaseOrderDetail> IQ_GetPurchaseOrderDetail { get; set; }
        public virtual DbSet<IQ_GetOperationDepsit> IQ_GetOperationDepsit { get; set; }
        public virtual DbSet<GQ_GetStore> GQ_GetStore { get; set; }
        public virtual DbSet<I_TR_OperationSalesman> I_TR_OperationSalesman { get; set; }
        public virtual DbSet<I_TR_OperationTF> I_TR_OperationTF { get; set; }
        public virtual DbSet<I_TR_OperationTFDetail> I_TR_OperationTFDetail { get; set; }
        public virtual DbSet<I_TR_OperationSalesmanItem> I_TR_OperationSalesmanItem { get; set; }
        public virtual DbSet<IQ_GetOperationSalesman> IQ_GetOperationSalesman { get; set; }
        public virtual DbSet<IQ_GetOperationSalesmanItem> IQ_GetOperationSalesmanItem { get; set; }
        public virtual DbSet<IQ_GetOperationTF> IQ_GetOperationTF { get; set; }
        public virtual DbSet<IQ_GetOperationTFDetail> IQ_GetOperationTFDetail { get; set; }
        public virtual DbSet<A_Pay_D_VendorDoc> A_Pay_D_VendorDoc { get; set; }
        public virtual DbSet<A_Rec_CustomerDoc> A_Rec_CustomerDoc { get; set; }
        public virtual DbSet<AQ_GetCustomerDoc> AQ_GetCustomerDoc { get; set; }
        public virtual DbSet<AQ_GetVendorDoc> AQ_GetVendorDoc { get; set; }
        public virtual DbSet<A_Rec_D_CustomerDoc> A_Rec_D_CustomerDoc { get; set; }
        public virtual DbSet<IQ_GetCustomer> IQ_GetCustomer { get; set; }
        public virtual DbSet<A_Rec_D_Customer> A_Rec_D_Customer { get; set; }
        public virtual DbSet<G_Currency> G_Currency { get; set; }
        public virtual DbSet<G_Nationality> G_Nationality { get; set; }
        public virtual DbSet<G_VatNature> G_VatNature { get; set; }
        public virtual DbSet<IQ_GetItemCategory> IQ_GetItemCategory { get; set; }
        public virtual DbSet<AVAT_D_SrvCategory> AVAT_D_SrvCategory { get; set; }
        public virtual DbSet<AQVAT_GetSrvCategory> AQVAT_GetSrvCategory { get; set; }
        public virtual DbSet<AVAT_TR_SlsInvoice> AVAT_TR_SlsInvoice { get; set; }
        public virtual DbSet<AVAT_TR_SlsInvoiceItem> AVAT_TR_SlsInvoiceItem { get; set; }
        public virtual DbSet<AQVAT_GetSlsInvoiceItem> AQVAT_GetSlsInvoiceItem { get; set; }
        public virtual DbSet<AQVAT_GetSlsInvoiceList> AQVAT_GetSlsInvoiceList { get; set; }
        public virtual DbSet<AVAT_TR_PurInvoice> AVAT_TR_PurInvoice { get; set; }
        public virtual DbSet<AVAT_TR_PurInvoiceDetail> AVAT_TR_PurInvoiceDetail { get; set; }
        public virtual DbSet<AVAT_TR_PurInvoiceHeader> AVAT_TR_PurInvoiceHeader { get; set; }
        public virtual DbSet<AVAT_TR_PurInvoiceRet> AVAT_TR_PurInvoiceRet { get; set; }
        public virtual DbSet<AVAT_TR_PurInvoiceRetDetail> AVAT_TR_PurInvoiceRetDetail { get; set; }
        public virtual DbSet<AQVAT_GetPurInvoiceDetail> AQVAT_GetPurInvoiceDetail { get; set; }
        public virtual DbSet<AQVAT_GetPurInvoiceHeader> AQVAT_GetPurInvoiceHeader { get; set; }
        public virtual DbSet<AQVAT_GetPurReturn> AQVAT_GetPurReturn { get; set; }
        public virtual DbSet<AVAT_D_Service> AVAT_D_Service { get; set; }
        public virtual DbSet<AQVAT_GetService> AQVAT_GetService { get; set; }
        public virtual DbSet<AQVAT_GetPurReturnDetail> AQVAT_GetPurReturnDetail { get; set; }
        public virtual DbSet<I_Control> I_Control { get; set; }
        public virtual DbSet<A_CCDT_COSTCENTERS> A_CCDT_COSTCENTERS { get; set; }
        public virtual DbSet<AVAT_CONTROL> AVAT_CONTROL { get; set; }
        public virtual DbSet<AVAT_PERIOD> AVAT_PERIOD { get; set; }
        public virtual DbSet<AVAT_PeriodDetail> AVAT_PeriodDetail { get; set; }
        public virtual DbSet<AVAT_TRANS> AVAT_TRANS { get; set; }
        public virtual DbSet<AQVAT_GetPeriodDetail> AQVAT_GetPeriodDetail { get; set; }
        public virtual DbSet<A_CCDT_Types> A_CCDT_Types { get; set; }
        public virtual DbSet<A_JOURNAL_DETAIL> A_JOURNAL_DETAIL { get; set; }
        public virtual DbSet<AQ_GetJournalDetail> AQ_GetJournalDetail { get; set; }
        public virtual DbSet<G_LnkTransVoucher> G_LnkTransVoucher { get; set; }
        public virtual DbSet<GQ_GetLnkTransVoucher> GQ_GetLnkTransVoucher { get; set; }
        public virtual DbSet<GQ_GetLnkTransVoucherDetail> GQ_GetLnkTransVoucherDetail { get; set; }
        public virtual DbSet<GQ_GetLnkVarBranch> GQ_GetLnkVarBranch { get; set; }
        public virtual DbSet<GQ_GetLnkVoucherDetail> GQ_GetLnkVoucherDetail { get; set; }
        public virtual DbSet<A_CashVoucher_Detail> A_CashVoucher_Detail { get; set; }
        public virtual DbSet<A_CashVoucher_Header> A_CashVoucher_Header { get; set; }
        public virtual DbSet<I_D_UnitGroupUom> I_D_UnitGroupUom { get; set; }
        public virtual DbSet<AQ_GetCashVoucherDetail> AQ_GetCashVoucherDetail { get; set; }
        public virtual DbSet<AQ_GetCashVoucherHeader> AQ_GetCashVoucherHeader { get; set; }
        public virtual DbSet<I_TR_Collect> I_TR_Collect { get; set; }
        public virtual DbSet<I_TR_CollectDetail> I_TR_CollectDetail { get; set; }
        public virtual DbSet<IQ_GetCollectDetail> IQ_GetCollectDetail { get; set; }
        public virtual DbSet<I_TR_OperationItemsSum> I_TR_OperationItemsSum { get; set; }
        public virtual DbSet<IQ_GetItemFamily> IQ_GetItemFamily { get; set; }
        public virtual DbSet<I_Period> I_Period { get; set; }
        public virtual DbSet<I_PeriodItem> I_PeriodItem { get; set; }
        public virtual DbSet<IQ_GetItemStoreInfo> IQ_GetItemStoreInfo { get; set; }
        public virtual DbSet<A_Pay_D_Vendor> A_Pay_D_Vendor { get; set; }
        public virtual DbSet<I_D_IssueType> I_D_IssueType { get; set; }
        public virtual DbSet<I_Stk_TR_IssueToCC> I_Stk_TR_IssueToCC { get; set; }
        public virtual DbSet<I_Stk_TR_IssueToCCDetails> I_Stk_TR_IssueToCCDetails { get; set; }
        public virtual DbSet<IQ_GetStkIssueCC> IQ_GetStkIssueCC { get; set; }
        public virtual DbSet<IQ_GetStkIssueCCDetail> IQ_GetStkIssueCCDetail { get; set; }
        public virtual DbSet<IQ_GetVendor> IQ_GetVendor { get; set; }
        public virtual DbSet<IQ_GetSlsInvoiceListVer2> IQ_GetSlsInvoiceListVer2 { get; set; }
        public virtual DbSet<IQ_GetSlsInvoiceStatisticVer2> IQ_GetSlsInvoiceStatisticVer2 { get; set; }
    
        public virtual int G_ProcessTrans(Nullable<int> comp, Nullable<int> branch, string trType, string opMode, Nullable<int> trID, ObjectParameter trNo, ObjectParameter ok)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("Comp", comp) :
                new ObjectParameter("Comp", typeof(int));
    
            var branchParameter = branch.HasValue ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(int));
    
            var trTypeParameter = trType != null ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(string));
    
            var opModeParameter = opMode != null ?
                new ObjectParameter("OpMode", opMode) :
                new ObjectParameter("OpMode", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("G_ProcessTrans", compParameter, branchParameter, trTypeParameter, opModeParameter, trIDParameter, trNo, ok);
        }
    
        public virtual int G_TOL_GetCounter(string system, Nullable<int> comp, Nullable<int> branch, Nullable<System.DateTime> dt, string trType, ObjectParameter trNo)
        {
            var systemParameter = system != null ?
                new ObjectParameter("System", system) :
                new ObjectParameter("System", typeof(string));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("Comp", comp) :
                new ObjectParameter("Comp", typeof(int));
    
            var branchParameter = branch.HasValue ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(int));
    
            var dtParameter = dt.HasValue ?
                new ObjectParameter("dt", dt) :
                new ObjectParameter("dt", typeof(System.DateTime));
    
            var trTypeParameter = trType != null ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("G_TOL_GetCounter", systemParameter, compParameter, branchParameter, dtParameter, trTypeParameter, trNo);
        }
    
        [DbFunction("InvEntities", "GFun_Companies")]
        public virtual IQueryable<GFun_Companies_Result> GFun_Companies(string userCode)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("userCode", userCode) :
                new ObjectParameter("userCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GFun_Companies_Result>("[InvEntities].[GFun_Companies](@userCode)", userCodeParameter);
        }
    
        [DbFunction("InvEntities", "GFun_UserCompanyBranch")]
        public virtual IQueryable<GFun_UserCompanyBranch_Result> GFun_UserCompanyBranch(string userCode, Nullable<int> compCode)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("userCode", userCode) :
                new ObjectParameter("userCode", typeof(string));
    
            var compCodeParameter = compCode.HasValue ?
                new ObjectParameter("CompCode", compCode) :
                new ObjectParameter("CompCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GFun_UserCompanyBranch_Result>("[InvEntities].[GFun_UserCompanyBranch](@userCode, @CompCode)", userCodeParameter, compCodeParameter);
        }
    
        public virtual int GProc_CreateUser(string user, string likeUser)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var likeUserParameter = likeUser != null ?
                new ObjectParameter("LikeUser", likeUser) :
                new ObjectParameter("LikeUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GProc_CreateUser", userParameter, likeUserParameter);
        }
    
        [DbFunction("InvEntities", "GFunc_GetPrivilage")]
        public virtual IQueryable<GFunc_GetPrivilage_Result> GFunc_GetPrivilage(Nullable<int> year, Nullable<int> comp, Nullable<int> bra, string user, string sys, string mod)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("Comp", comp) :
                new ObjectParameter("Comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var sysParameter = sys != null ?
                new ObjectParameter("Sys", sys) :
                new ObjectParameter("Sys", typeof(string));
    
            var modParameter = mod != null ?
                new ObjectParameter("Mod", mod) :
                new ObjectParameter("Mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GFunc_GetPrivilage_Result>("[InvEntities].[GFunc_GetPrivilage](@year, @Comp, @bra, @user, @Sys, @Mod)", yearParameter, compParameter, braParameter, userParameter, sysParameter, modParameter);
        }
    
        public virtual int GProc_SecCreateUser(string user, Nullable<int> comp)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("Comp", comp) :
                new ObjectParameter("Comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GProc_SecCreateUser", userParameter, compParameter);
        }
    
        public virtual int Iproc_Deleteitem(Nullable<int> itemid, ObjectParameter oK)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Iproc_Deleteitem", itemidParameter, oK);
        }
    
        public virtual int GLnk_GenerateTrans(Nullable<int> comp, Nullable<int> bra, string user, string sys, string tRType, string fromDate, string toDate, Nullable<int> fromno, Nullable<int> toNo)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var sysParameter = sys != null ?
                new ObjectParameter("Sys", sys) :
                new ObjectParameter("Sys", typeof(string));
    
            var tRTypeParameter = tRType != null ?
                new ObjectParameter("TRType", tRType) :
                new ObjectParameter("TRType", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromnoParameter = fromno.HasValue ?
                new ObjectParameter("Fromno", fromno) :
                new ObjectParameter("Fromno", typeof(int));
    
            var toNoParameter = toNo.HasValue ?
                new ObjectParameter("ToNo", toNo) :
                new ObjectParameter("ToNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GLnk_GenerateTrans", compParameter, braParameter, userParameter, sysParameter, tRTypeParameter, fromDateParameter, toDateParameter, fromnoParameter, toNoParameter);
        }
    
        public virtual int GLnk_GenerateTransVchr(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GLnk_GenerateTransVchr", userParameter);
        }
    
        [DbFunction("InvEntities", "AFunc_VoucherTotals")]
        public virtual IQueryable<AFunc_VoucherTotals_Result> AFunc_VoucherTotals(Nullable<int> comp, Nullable<int> authorized, Nullable<int> newvoucher, string cc_code, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var authorizedParameter = authorized.HasValue ?
                new ObjectParameter("authorized", authorized) :
                new ObjectParameter("authorized", typeof(int));
    
            var newvoucherParameter = newvoucher.HasValue ?
                new ObjectParameter("newvoucher", newvoucher) :
                new ObjectParameter("newvoucher", typeof(int));
    
            var cc_codeParameter = cc_code != null ?
                new ObjectParameter("cc_code", cc_code) :
                new ObjectParameter("cc_code", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AFunc_VoucherTotals_Result>("[InvEntities].[AFunc_VoucherTotals](@comp, @authorized, @newvoucher, @cc_code, @FromDate, @Todate)", compParameter, authorizedParameter, newvoucherParameter, cc_codeParameter, fromDateParameter, todateParameter);
        }
    
        public virtual int GLnk_GenerateVoucher(Nullable<int> comp, Nullable<int> bra, string user, string vchrDescr, ObjectParameter vTrno)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var vchrDescrParameter = vchrDescr != null ?
                new ObjectParameter("VchrDescr", vchrDescr) :
                new ObjectParameter("VchrDescr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GLnk_GenerateVoucher", compParameter, braParameter, userParameter, vchrDescrParameter, vTrno);
        }
    
        public virtual int GProc_CreateBranch(Nullable<int> comp, Nullable<int> bra)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GProc_CreateBranch", compParameter, braParameter);
        }
    
        public virtual int GProc_CreateStore(Nullable<int> comp, Nullable<int> bra, Nullable<int> stCode)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var stCodeParameter = stCode.HasValue ?
                new ObjectParameter("stCode", stCode) :
                new ObjectParameter("stCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GProc_CreateStore", compParameter, braParameter, stCodeParameter);
        }
    
        public virtual ObjectResult<AProc_Rpt_GLGeneralLedger_Result> AProc_Rpt_GLGeneralLedger(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string fromDate, string toDate, string cc_Code, string accCode, Nullable<int> isAuthVchr, Nullable<int> isNewVchr, Nullable<int> openType, Nullable<int> endType, Nullable<int> prdType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var cc_CodeParameter = cc_Code != null ?
                new ObjectParameter("cc_Code", cc_Code) :
                new ObjectParameter("cc_Code", typeof(string));
    
            var accCodeParameter = accCode != null ?
                new ObjectParameter("AccCode", accCode) :
                new ObjectParameter("AccCode", typeof(string));
    
            var isAuthVchrParameter = isAuthVchr.HasValue ?
                new ObjectParameter("IsAuthVchr", isAuthVchr) :
                new ObjectParameter("IsAuthVchr", typeof(int));
    
            var isNewVchrParameter = isNewVchr.HasValue ?
                new ObjectParameter("IsNewVchr", isNewVchr) :
                new ObjectParameter("IsNewVchr", typeof(int));
    
            var openTypeParameter = openType.HasValue ?
                new ObjectParameter("OpenType", openType) :
                new ObjectParameter("OpenType", typeof(int));
    
            var endTypeParameter = endType.HasValue ?
                new ObjectParameter("EndType", endType) :
                new ObjectParameter("EndType", typeof(int));
    
            var prdTypeParameter = prdType.HasValue ?
                new ObjectParameter("PrdType", prdType) :
                new ObjectParameter("PrdType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AProc_Rpt_GLGeneralLedger_Result>("AProc_Rpt_GLGeneralLedger", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, fromDateParameter, toDateParameter, cc_CodeParameter, accCodeParameter, isAuthVchrParameter, isNewVchrParameter, openTypeParameter, endTypeParameter, prdTypeParameter);
        }
    
        public virtual ObjectResult<AProc_Rpt_JournalVoucherList_Result> AProc_Rpt_JournalVoucherList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string fromDate, string toDate, Nullable<int> vchrSource, Nullable<int> vchrType, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var vchrSourceParameter = vchrSource.HasValue ?
                new ObjectParameter("VchrSource", vchrSource) :
                new ObjectParameter("VchrSource", typeof(int));
    
            var vchrTypeParameter = vchrType.HasValue ?
                new ObjectParameter("VchrType", vchrType) :
                new ObjectParameter("VchrType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AProc_Rpt_JournalVoucherList_Result>("AProc_Rpt_JournalVoucherList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, fromDateParameter, toDateParameter, vchrSourceParameter, vchrTypeParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_OerationTf_Result> IProc_Prnt_OerationTf(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_OerationTf_Result>("IProc_Prnt_OerationTf", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_PurReceiveCharge_Result> IProc_Prnt_PurReceiveCharge(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_PurReceiveCharge_Result>("IProc_Prnt_PurReceiveCharge", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_PurReceiveRet_Result> IProc_Prnt_PurReceiveRet(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_PurReceiveRet_Result>("IProc_Prnt_PurReceiveRet", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_StkAdjust_Result> IProc_Prnt_StkAdjust(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_StkAdjust_Result>("IProc_Prnt_StkAdjust", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_StkTransfer_Result> IProc_Prnt_StkTransfer(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_StkTransfer_Result>("IProc_Prnt_StkTransfer", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_VATPurReturn_Result> IProc_Prnt_VATPurReturn(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_VATPurReturn_Result>("IProc_Prnt_VATPurReturn", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Rep_AccAdjustList_Result> IProc_Rep_AccAdjustList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> trType, string fromDate, string toDate, Nullable<int> adjDebit, Nullable<int> adjId, Nullable<int> customerID, Nullable<int> vendorId, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var trTypeParameter = trType.HasValue ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var adjDebitParameter = adjDebit.HasValue ?
                new ObjectParameter("AdjDebit", adjDebit) :
                new ObjectParameter("AdjDebit", typeof(int));
    
            var adjIdParameter = adjId.HasValue ?
                new ObjectParameter("AdjId", adjId) :
                new ObjectParameter("AdjId", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rep_AccAdjustList_Result>("IProc_Rep_AccAdjustList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, trTypeParameter, fromDateParameter, toDateParameter, adjDebitParameter, adjIdParameter, customerIDParameter, vendorIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccCustomerDetail_Result> IProc_Rpt_AccCustomerDetail(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> groupID, Nullable<int> customerID, Nullable<int> salesManID, Nullable<int> status, Nullable<int> balType, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var salesManIDParameter = salesManID.HasValue ?
                new ObjectParameter("SalesManID", salesManID) :
                new ObjectParameter("SalesManID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var balTypeParameter = balType.HasValue ?
                new ObjectParameter("BalType", balType) :
                new ObjectParameter("BalType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccCustomerDetail_Result>("IProc_Rpt_AccCustomerDetail", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, groupIDParameter, customerIDParameter, salesManIDParameter, statusParameter, balTypeParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_ItemStockIncome_Result> IProc_Rpt_ItemStockIncome(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> itemFamId, Nullable<int> itemID, Nullable<int> type, Nullable<int> status, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemFamIdParameter = itemFamId.HasValue ?
                new ObjectParameter("ItemFamId", itemFamId) :
                new ObjectParameter("ItemFamId", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_ItemStockIncome_Result>("IProc_Rpt_ItemStockIncome", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, itemFamIdParameter, itemIDParameter, typeParameter, statusParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_OerationTFList_Result> IProc_Rpt_OerationTFList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string fromDate, string toDate, Nullable<int> operationId, Nullable<int> fromSls, Nullable<int> toSls, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var operationIdParameter = operationId.HasValue ?
                new ObjectParameter("OperationId", operationId) :
                new ObjectParameter("OperationId", typeof(int));
    
            var fromSlsParameter = fromSls.HasValue ?
                new ObjectParameter("FromSls", fromSls) :
                new ObjectParameter("FromSls", typeof(int));
    
            var toSlsParameter = toSls.HasValue ?
                new ObjectParameter("ToSls", toSls) :
                new ObjectParameter("ToSls", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_OerationTFList_Result>("IProc_Rpt_OerationTFList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, fromDateParameter, toDateParameter, operationIdParameter, fromSlsParameter, toSlsParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_PurPurchaseOrderList_Result> IProc_Rpt_PurPurchaseOrderList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string fromDate, string toDate, Nullable<int> vendorID, Nullable<int> salesmanID, Nullable<int> cashType, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var salesmanIDParameter = salesmanID.HasValue ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(int));
    
            var cashTypeParameter = cashType.HasValue ?
                new ObjectParameter("CashType", cashType) :
                new ObjectParameter("CashType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_PurPurchaseOrderList_Result>("IProc_Rpt_PurPurchaseOrderList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, fromDateParameter, toDateParameter, vendorIDParameter, salesmanIDParameter, cashTypeParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_StkAdjustList_Result> IProc_Rpt_StkAdjustList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> trType, string fromDate, string toDate, Nullable<int> storeID, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var trTypeParameter = trType.HasValue ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("storeID", storeID) :
                new ObjectParameter("storeID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_StkAdjustList_Result>("IProc_Rpt_StkAdjustList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, trTypeParameter, fromDateParameter, toDateParameter, storeIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_StkTransferList_Result> IProc_Rpt_StkTransferList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> trType, Nullable<int> tfType, string fromDate, string toDate, Nullable<int> fromBra, Nullable<int> fromstoreID, Nullable<int> toBra, Nullable<int> toStoreID, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var trTypeParameter = trType.HasValue ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(int));
    
            var tfTypeParameter = tfType.HasValue ?
                new ObjectParameter("TfType", tfType) :
                new ObjectParameter("TfType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromBraParameter = fromBra.HasValue ?
                new ObjectParameter("FromBra", fromBra) :
                new ObjectParameter("FromBra", typeof(int));
    
            var fromstoreIDParameter = fromstoreID.HasValue ?
                new ObjectParameter("FromstoreID", fromstoreID) :
                new ObjectParameter("FromstoreID", typeof(int));
    
            var toBraParameter = toBra.HasValue ?
                new ObjectParameter("ToBra", toBra) :
                new ObjectParameter("ToBra", typeof(int));
    
            var toStoreIDParameter = toStoreID.HasValue ?
                new ObjectParameter("ToStoreID", toStoreID) :
                new ObjectParameter("ToStoreID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_StkTransferList_Result>("IProc_Rpt_StkTransferList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, trTypeParameter, tfTypeParameter, fromDateParameter, toDateParameter, fromBraParameter, fromstoreIDParameter, toBraParameter, toStoreIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_VATPurInvoiceList_Result> IProc_Rpt_VATPurInvoiceList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string fromDate, string toDate, Nullable<int> iSimport, Nullable<int> cashType, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var iSimportParameter = iSimport.HasValue ?
                new ObjectParameter("ISimport", iSimport) :
                new ObjectParameter("ISimport", typeof(int));
    
            var cashTypeParameter = cashType.HasValue ?
                new ObjectParameter("CashType", cashType) :
                new ObjectParameter("CashType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_VATPurInvoiceList_Result>("IProc_Rpt_VATPurInvoiceList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, fromDateParameter, toDateParameter, iSimportParameter, cashTypeParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_VATPurReturnList_Result> IProc_Rpt_VATPurReturnList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string fromDate, string toDate, Nullable<int> vendorID, Nullable<int> cashType, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var cashTypeParameter = cashType.HasValue ?
                new ObjectParameter("CashType", cashType) :
                new ObjectParameter("CashType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_VATPurReturnList_Result>("IProc_Rpt_VATPurReturnList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, fromDateParameter, toDateParameter, vendorIDParameter, cashTypeParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_VATSlsInvoiceList_Result> IProc_Rpt_VATSlsInvoiceList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> trType, string fromDate, string toDate, Nullable<int> customerID, Nullable<int> cashType, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var trTypeParameter = trType.HasValue ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var cashTypeParameter = cashType.HasValue ?
                new ObjectParameter("CashType", cashType) :
                new ObjectParameter("CashType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_VATSlsInvoiceList_Result>("IProc_Rpt_VATSlsInvoiceList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, trTypeParameter, fromDateParameter, toDateParameter, customerIDParameter, cashTypeParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Rep_AccCustomerList_Result> IProc_Rep_AccCustomerList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> isCredit, Nullable<int> catID, Nullable<int> groupID, Nullable<int> salesManID, Nullable<int> balStatus)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var isCreditParameter = isCredit.HasValue ?
                new ObjectParameter("IsCredit", isCredit) :
                new ObjectParameter("IsCredit", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var salesManIDParameter = salesManID.HasValue ?
                new ObjectParameter("SalesManID", salesManID) :
                new ObjectParameter("SalesManID", typeof(int));
    
            var balStatusParameter = balStatus.HasValue ?
                new ObjectParameter("BalStatus", balStatus) :
                new ObjectParameter("BalStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rep_AccCustomerList_Result>("IProc_Rep_AccCustomerList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, isCreditParameter, catIDParameter, groupIDParameter, salesManIDParameter, balStatusParameter);
        }
    
        public virtual int AProc_ReverseVoucher(Nullable<int> comp, string user, Nullable<int> trID, ObjectParameter newID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("Comp", comp) :
                new ObjectParameter("Comp", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AProc_ReverseVoucher", compParameter, userParameter, trIDParameter, newID);
        }
    
        public virtual ObjectResult<IProc_Prnt_VATPurInvoice_Result> IProc_Prnt_VATPurInvoice(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_VATPurInvoice_Result>("IProc_Prnt_VATPurInvoice", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_OperationCharges_Result> IProc_Prnt_OperationCharges(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_OperationCharges_Result>("IProc_Prnt_OperationCharges", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_OperationDeposit_Result> IProc_Prnt_OperationDeposit(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId, Nullable<int> slsid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            var slsidParameter = slsid.HasValue ?
                new ObjectParameter("Slsid", slsid) :
                new ObjectParameter("Slsid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_OperationDeposit_Result>("IProc_Prnt_OperationDeposit", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter, slsidParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_OperationItems_Result> IProc_Prnt_OperationItems(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_OperationItems_Result>("IProc_Prnt_OperationItems", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_OperationSalesmanItem_Result> IProc_Prnt_OperationSalesmanItem(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId, Nullable<int> slsid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            var slsidParameter = slsid.HasValue ?
                new ObjectParameter("Slsid", slsid) :
                new ObjectParameter("Slsid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_OperationSalesmanItem_Result>("IProc_Prnt_OperationSalesmanItem", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter, slsidParameter);
        }
    
        public virtual int IProc_CreateCompany(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IProc_CreateCompany", compParameter);
        }
    
        public virtual int AProc_VATPeriodClose(Nullable<int> comp, Nullable<int> yr, Nullable<int> prd, ObjectParameter voucherCode)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("Comp", comp) :
                new ObjectParameter("Comp", typeof(int));
    
            var yrParameter = yr.HasValue ?
                new ObjectParameter("yr", yr) :
                new ObjectParameter("yr", typeof(int));
    
            var prdParameter = prd.HasValue ?
                new ObjectParameter("Prd", prd) :
                new ObjectParameter("Prd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AProc_VATPeriodClose", compParameter, yrParameter, prdParameter, voucherCode);
        }
    
        public virtual int AProc_VATVatPeriodCalculate(Nullable<int> comp, Nullable<int> yr, Nullable<int> prd, ObjectParameter ok)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("Comp", comp) :
                new ObjectParameter("Comp", typeof(int));
    
            var yrParameter = yr.HasValue ?
                new ObjectParameter("yr", yr) :
                new ObjectParameter("yr", typeof(int));
    
            var prdParameter = prd.HasValue ?
                new ObjectParameter("Prd", prd) :
                new ObjectParameter("Prd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AProc_VATVatPeriodCalculate", compParameter, yrParameter, prdParameter, ok);
        }
    
        public virtual ObjectResult<IProc_Rpt_VATListDetail_Result> IProc_Rpt_VATListDetail(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> trType, Nullable<int> braCode, string sysCode, string transCode, string fromDate, string toDate, Nullable<int> vattype)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var trTypeParameter = trType.HasValue ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("SysCode", sysCode) :
                new ObjectParameter("SysCode", typeof(string));
    
            var transCodeParameter = transCode != null ?
                new ObjectParameter("TransCode", transCode) :
                new ObjectParameter("TransCode", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var vattypeParameter = vattype.HasValue ?
                new ObjectParameter("Vattype", vattype) :
                new ObjectParameter("Vattype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_VATListDetail_Result>("IProc_Rpt_VATListDetail", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, trTypeParameter, braCodeParameter, sysCodeParameter, transCodeParameter, fromDateParameter, toDateParameter, vattypeParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_VatPurchaseDetail_Result> IProc_Rpt_VatPurchaseDetail(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> braCode, Nullable<int> catID, Nullable<int> itemID, Nullable<int> cusCatID, Nullable<int> cusGroupid, Nullable<int> cusid, Nullable<int> sLStype, Nullable<int> isImport, string ccCode, Nullable<int> status, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var cusCatIDParameter = cusCatID.HasValue ?
                new ObjectParameter("cusCatID", cusCatID) :
                new ObjectParameter("cusCatID", typeof(int));
    
            var cusGroupidParameter = cusGroupid.HasValue ?
                new ObjectParameter("cusGroupid", cusGroupid) :
                new ObjectParameter("cusGroupid", typeof(int));
    
            var cusidParameter = cusid.HasValue ?
                new ObjectParameter("cusid", cusid) :
                new ObjectParameter("cusid", typeof(int));
    
            var sLStypeParameter = sLStype.HasValue ?
                new ObjectParameter("SLStype", sLStype) :
                new ObjectParameter("SLStype", typeof(int));
    
            var isImportParameter = isImport.HasValue ?
                new ObjectParameter("IsImport", isImport) :
                new ObjectParameter("IsImport", typeof(int));
    
            var ccCodeParameter = ccCode != null ?
                new ObjectParameter("ccCode", ccCode) :
                new ObjectParameter("ccCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_VatPurchaseDetail_Result>("IProc_Rpt_VatPurchaseDetail", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, braCodeParameter, catIDParameter, itemIDParameter, cusCatIDParameter, cusGroupidParameter, cusidParameter, sLStypeParameter, isImportParameter, ccCodeParameter, statusParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_VatPurchaseSummary_Result> IProc_Rpt_VatPurchaseSummary(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> braCode, Nullable<int> catID, Nullable<int> itemID, Nullable<int> cusCatID, Nullable<int> cusGroupid, Nullable<int> cusid, Nullable<int> sLStype, Nullable<int> isImport, string ccCode, Nullable<int> status, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var cusCatIDParameter = cusCatID.HasValue ?
                new ObjectParameter("cusCatID", cusCatID) :
                new ObjectParameter("cusCatID", typeof(int));
    
            var cusGroupidParameter = cusGroupid.HasValue ?
                new ObjectParameter("cusGroupid", cusGroupid) :
                new ObjectParameter("cusGroupid", typeof(int));
    
            var cusidParameter = cusid.HasValue ?
                new ObjectParameter("cusid", cusid) :
                new ObjectParameter("cusid", typeof(int));
    
            var sLStypeParameter = sLStype.HasValue ?
                new ObjectParameter("SLStype", sLStype) :
                new ObjectParameter("SLStype", typeof(int));
    
            var isImportParameter = isImport.HasValue ?
                new ObjectParameter("IsImport", isImport) :
                new ObjectParameter("IsImport", typeof(int));
    
            var ccCodeParameter = ccCode != null ?
                new ObjectParameter("ccCode", ccCode) :
                new ObjectParameter("ccCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_VatPurchaseSummary_Result>("IProc_Rpt_VatPurchaseSummary", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, braCodeParameter, catIDParameter, itemIDParameter, cusCatIDParameter, cusGroupidParameter, cusidParameter, sLStypeParameter, isImportParameter, ccCodeParameter, statusParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_VatPurReturnDetail_Result> IProc_Rpt_VatPurReturnDetail(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> braCode, Nullable<int> catID, Nullable<int> itemID, Nullable<int> cusCatID, Nullable<int> cusGroupid, Nullable<int> cusid, Nullable<int> sLStype, Nullable<int> isImport, string ccCode, Nullable<int> status, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var cusCatIDParameter = cusCatID.HasValue ?
                new ObjectParameter("cusCatID", cusCatID) :
                new ObjectParameter("cusCatID", typeof(int));
    
            var cusGroupidParameter = cusGroupid.HasValue ?
                new ObjectParameter("cusGroupid", cusGroupid) :
                new ObjectParameter("cusGroupid", typeof(int));
    
            var cusidParameter = cusid.HasValue ?
                new ObjectParameter("cusid", cusid) :
                new ObjectParameter("cusid", typeof(int));
    
            var sLStypeParameter = sLStype.HasValue ?
                new ObjectParameter("SLStype", sLStype) :
                new ObjectParameter("SLStype", typeof(int));
    
            var isImportParameter = isImport.HasValue ?
                new ObjectParameter("IsImport", isImport) :
                new ObjectParameter("IsImport", typeof(int));
    
            var ccCodeParameter = ccCode != null ?
                new ObjectParameter("ccCode", ccCode) :
                new ObjectParameter("ccCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_VatPurReturnDetail_Result>("IProc_Rpt_VatPurReturnDetail", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, braCodeParameter, catIDParameter, itemIDParameter, cusCatIDParameter, cusGroupidParameter, cusidParameter, sLStypeParameter, isImportParameter, ccCodeParameter, statusParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_VatPurReturnSummary_Result> IProc_Rpt_VatPurReturnSummary(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> braCode, Nullable<int> catID, Nullable<int> itemID, Nullable<int> cusCatID, Nullable<int> cusGroupid, Nullable<int> cusid, Nullable<int> sLStype, Nullable<int> isImport, string ccCode, Nullable<int> status, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var cusCatIDParameter = cusCatID.HasValue ?
                new ObjectParameter("cusCatID", cusCatID) :
                new ObjectParameter("cusCatID", typeof(int));
    
            var cusGroupidParameter = cusGroupid.HasValue ?
                new ObjectParameter("cusGroupid", cusGroupid) :
                new ObjectParameter("cusGroupid", typeof(int));
    
            var cusidParameter = cusid.HasValue ?
                new ObjectParameter("cusid", cusid) :
                new ObjectParameter("cusid", typeof(int));
    
            var sLStypeParameter = sLStype.HasValue ?
                new ObjectParameter("SLStype", sLStype) :
                new ObjectParameter("SLStype", typeof(int));
    
            var isImportParameter = isImport.HasValue ?
                new ObjectParameter("IsImport", isImport) :
                new ObjectParameter("IsImport", typeof(int));
    
            var ccCodeParameter = ccCode != null ?
                new ObjectParameter("ccCode", ccCode) :
                new ObjectParameter("ccCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_VatPurReturnSummary_Result>("IProc_Rpt_VatPurReturnSummary", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, braCodeParameter, catIDParameter, itemIDParameter, cusCatIDParameter, cusGroupidParameter, cusidParameter, sLStypeParameter, isImportParameter, ccCodeParameter, statusParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_VatSalesDetail_Result> IProc_Rpt_VatSalesDetail(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> braCode, Nullable<int> catID, Nullable<int> itemID, Nullable<int> cusCatID, Nullable<int> cusGroupid, Nullable<int> cusid, Nullable<int> sLStype, Nullable<int> tRtype, string ccCode, Nullable<int> status, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var cusCatIDParameter = cusCatID.HasValue ?
                new ObjectParameter("cusCatID", cusCatID) :
                new ObjectParameter("cusCatID", typeof(int));
    
            var cusGroupidParameter = cusGroupid.HasValue ?
                new ObjectParameter("cusGroupid", cusGroupid) :
                new ObjectParameter("cusGroupid", typeof(int));
    
            var cusidParameter = cusid.HasValue ?
                new ObjectParameter("cusid", cusid) :
                new ObjectParameter("cusid", typeof(int));
    
            var sLStypeParameter = sLStype.HasValue ?
                new ObjectParameter("SLStype", sLStype) :
                new ObjectParameter("SLStype", typeof(int));
    
            var tRtypeParameter = tRtype.HasValue ?
                new ObjectParameter("TRtype", tRtype) :
                new ObjectParameter("TRtype", typeof(int));
    
            var ccCodeParameter = ccCode != null ?
                new ObjectParameter("ccCode", ccCode) :
                new ObjectParameter("ccCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_VatSalesDetail_Result>("IProc_Rpt_VatSalesDetail", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, braCodeParameter, catIDParameter, itemIDParameter, cusCatIDParameter, cusGroupidParameter, cusidParameter, sLStypeParameter, tRtypeParameter, ccCodeParameter, statusParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_VatSalesSummary_Result> IProc_Rpt_VatSalesSummary(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> braCode, Nullable<int> catID, Nullable<int> itemID, Nullable<int> cusCatID, Nullable<int> cusGroupid, Nullable<int> cusid, Nullable<int> sLStype, Nullable<int> tRtype, string ccCode, Nullable<int> status, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var cusCatIDParameter = cusCatID.HasValue ?
                new ObjectParameter("cusCatID", cusCatID) :
                new ObjectParameter("cusCatID", typeof(int));
    
            var cusGroupidParameter = cusGroupid.HasValue ?
                new ObjectParameter("cusGroupid", cusGroupid) :
                new ObjectParameter("cusGroupid", typeof(int));
    
            var cusidParameter = cusid.HasValue ?
                new ObjectParameter("cusid", cusid) :
                new ObjectParameter("cusid", typeof(int));
    
            var sLStypeParameter = sLStype.HasValue ?
                new ObjectParameter("SLStype", sLStype) :
                new ObjectParameter("SLStype", typeof(int));
    
            var tRtypeParameter = tRtype.HasValue ?
                new ObjectParameter("TRtype", tRtype) :
                new ObjectParameter("TRtype", typeof(int));
    
            var ccCodeParameter = ccCode != null ?
                new ObjectParameter("ccCode", ccCode) :
                new ObjectParameter("ccCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_VatSalesSummary_Result>("IProc_Rpt_VatSalesSummary", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, braCodeParameter, catIDParameter, itemIDParameter, cusCatIDParameter, cusGroupidParameter, cusidParameter, sLStypeParameter, tRtypeParameter, ccCodeParameter, statusParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<AProc_Prnt_CashVoucher_Result> AProc_Prnt_CashVoucher(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AProc_Prnt_CashVoucher_Result>("AProc_Prnt_CashVoucher", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<AProc_Prnt_JournalVoucher_Result> AProc_Prnt_JournalVoucher(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AProc_Prnt_JournalVoucher_Result>("AProc_Prnt_JournalVoucher", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<AProc_Rpt_CashVoucherList_Result> AProc_Rpt_CashVoucherList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string fromDate, string toDate, Nullable<int> vchrType, Nullable<int> paymentType, Nullable<int> tRType, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var vchrTypeParameter = vchrType.HasValue ?
                new ObjectParameter("VchrType", vchrType) :
                new ObjectParameter("VchrType", typeof(int));
    
            var paymentTypeParameter = paymentType.HasValue ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(int));
    
            var tRTypeParameter = tRType.HasValue ?
                new ObjectParameter("TRType", tRType) :
                new ObjectParameter("TRType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AProc_Rpt_CashVoucherList_Result>("AProc_Rpt_CashVoucherList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, fromDateParameter, toDateParameter, vchrTypeParameter, paymentTypeParameter, tRTypeParameter, statusParameter);
        }
    
        public virtual ObjectResult<AProc_Rpt_GLDtCCenterStatmentDetail_Result> AProc_Rpt_GLDtCCenterStatmentDetail(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string fromDate, string toDate, string dtcc_Code, string fromAccCode, Nullable<int> isAuthVchr, Nullable<int> isNewVchr, Nullable<int> exZero)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var dtcc_CodeParameter = dtcc_Code != null ?
                new ObjectParameter("dtcc_Code", dtcc_Code) :
                new ObjectParameter("dtcc_Code", typeof(string));
    
            var fromAccCodeParameter = fromAccCode != null ?
                new ObjectParameter("FromAccCode", fromAccCode) :
                new ObjectParameter("FromAccCode", typeof(string));
    
            var isAuthVchrParameter = isAuthVchr.HasValue ?
                new ObjectParameter("IsAuthVchr", isAuthVchr) :
                new ObjectParameter("IsAuthVchr", typeof(int));
    
            var isNewVchrParameter = isNewVchr.HasValue ?
                new ObjectParameter("IsNewVchr", isNewVchr) :
                new ObjectParameter("IsNewVchr", typeof(int));
    
            var exZeroParameter = exZero.HasValue ?
                new ObjectParameter("ExZero", exZero) :
                new ObjectParameter("ExZero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AProc_Rpt_GLDtCCenterStatmentDetail_Result>("AProc_Rpt_GLDtCCenterStatmentDetail", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, fromDateParameter, toDateParameter, dtcc_CodeParameter, fromAccCodeParameter, isAuthVchrParameter, isNewVchrParameter, exZeroParameter);
        }
    
        public virtual ObjectResult<AProc_Rpt_GLDtCCenterStatmentSummary_Result> AProc_Rpt_GLDtCCenterStatmentSummary(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string fromDate, string toDate, string dtcc_Code, string fromAccCode, Nullable<int> isAuthVchr, Nullable<int> isNewVchr, Nullable<int> exZero)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var dtcc_CodeParameter = dtcc_Code != null ?
                new ObjectParameter("dtcc_Code", dtcc_Code) :
                new ObjectParameter("dtcc_Code", typeof(string));
    
            var fromAccCodeParameter = fromAccCode != null ?
                new ObjectParameter("FromAccCode", fromAccCode) :
                new ObjectParameter("FromAccCode", typeof(string));
    
            var isAuthVchrParameter = isAuthVchr.HasValue ?
                new ObjectParameter("IsAuthVchr", isAuthVchr) :
                new ObjectParameter("IsAuthVchr", typeof(int));
    
            var isNewVchrParameter = isNewVchr.HasValue ?
                new ObjectParameter("IsNewVchr", isNewVchr) :
                new ObjectParameter("IsNewVchr", typeof(int));
    
            var exZeroParameter = exZero.HasValue ?
                new ObjectParameter("ExZero", exZero) :
                new ObjectParameter("ExZero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AProc_Rpt_GLDtCCenterStatmentSummary_Result>("AProc_Rpt_GLDtCCenterStatmentSummary", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, fromDateParameter, toDateParameter, dtcc_CodeParameter, fromAccCodeParameter, isAuthVchrParameter, isNewVchrParameter, exZeroParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_VATReport_Result> IProc_Prnt_VATReport(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> vatyear, Nullable<int> prdcode)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var vatyearParameter = vatyear.HasValue ?
                new ObjectParameter("vatyear", vatyear) :
                new ObjectParameter("vatyear", typeof(int));
    
            var prdcodeParameter = prdcode.HasValue ?
                new ObjectParameter("prdcode", prdcode) :
                new ObjectParameter("prdcode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_VATReport_Result>("IProc_Prnt_VATReport", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, vatyearParameter, prdcodeParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_VATListSummary_Result> IProc_Rpt_VATListSummary(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> trType, Nullable<int> braCode, string sysCode, string transCode, string fromDate, string toDate, Nullable<int> vattype, Nullable<int> groupBy)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var trTypeParameter = trType.HasValue ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var sysCodeParameter = sysCode != null ?
                new ObjectParameter("SysCode", sysCode) :
                new ObjectParameter("SysCode", typeof(string));
    
            var transCodeParameter = transCode != null ?
                new ObjectParameter("TransCode", transCode) :
                new ObjectParameter("TransCode", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var vattypeParameter = vattype.HasValue ?
                new ObjectParameter("Vattype", vattype) :
                new ObjectParameter("Vattype", typeof(int));
    
            var groupByParameter = groupBy.HasValue ?
                new ObjectParameter("groupBy", groupBy) :
                new ObjectParameter("groupBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_VATListSummary_Result>("IProc_Rpt_VATListSummary", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, trTypeParameter, braCodeParameter, sysCodeParameter, transCodeParameter, fromDateParameter, toDateParameter, vattypeParameter, groupByParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccReceiptList_Result> IProc_Rpt_AccReceiptList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> trType, string fromDate, string toDate, Nullable<int> boxId, Nullable<int> recType, string bnfID, string bnfDesc, Nullable<int> status, Nullable<int> cashType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var trTypeParameter = trType.HasValue ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var boxIdParameter = boxId.HasValue ?
                new ObjectParameter("BoxId", boxId) :
                new ObjectParameter("BoxId", typeof(int));
    
            var recTypeParameter = recType.HasValue ?
                new ObjectParameter("RecType", recType) :
                new ObjectParameter("RecType", typeof(int));
    
            var bnfIDParameter = bnfID != null ?
                new ObjectParameter("BnfID", bnfID) :
                new ObjectParameter("BnfID", typeof(string));
    
            var bnfDescParameter = bnfDesc != null ?
                new ObjectParameter("BnfDesc", bnfDesc) :
                new ObjectParameter("BnfDesc", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var cashTypeParameter = cashType.HasValue ?
                new ObjectParameter("CashType", cashType) :
                new ObjectParameter("CashType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccReceiptList_Result>("IProc_Rpt_AccReceiptList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, trTypeParameter, fromDateParameter, toDateParameter, boxIdParameter, recTypeParameter, bnfIDParameter, bnfDescParameter, statusParameter, cashTypeParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_PurPurchaseOrder_Result> IProc_Prnt_PurPurchaseOrder(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_PurPurchaseOrder_Result>("IProc_Prnt_PurPurchaseOrder", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, tRIdParameter);
        }
    
        public virtual int A_ProcessVouchers(string userCode, Nullable<int> comp, Nullable<int> vchrType, Nullable<int> opCode)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("userCode", userCode) :
                new ObjectParameter("userCode", typeof(string));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("Comp", comp) :
                new ObjectParameter("Comp", typeof(int));
    
            var vchrTypeParameter = vchrType.HasValue ?
                new ObjectParameter("VchrType", vchrType) :
                new ObjectParameter("VchrType", typeof(int));
    
            var opCodeParameter = opCode.HasValue ?
                new ObjectParameter("OpCode", opCode) :
                new ObjectParameter("OpCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("A_ProcessVouchers", userCodeParameter, compParameter, vchrTypeParameter, opCodeParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccBoxDetail_Result> IProc_Rpt_AccBoxDetail(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> boxid, Nullable<int> status, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var boxidParameter = boxid.HasValue ?
                new ObjectParameter("boxid", boxid) :
                new ObjectParameter("boxid", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccBoxDetail_Result>("IProc_Rpt_AccBoxDetail", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, boxidParameter, statusParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccBoxSummary_Result> IProc_Rpt_AccBoxSummary(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> boxid, Nullable<int> status, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var boxidParameter = boxid.HasValue ?
                new ObjectParameter("boxid", boxid) :
                new ObjectParameter("boxid", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccBoxSummary_Result>("IProc_Rpt_AccBoxSummary", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, boxidParameter, statusParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rep_OperationItemSales_Result> IProc_Rep_OperationItemSales(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rep_OperationItemSales_Result>("IProc_Rep_OperationItemSales", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Rep_OperationScrap_Result> IProc_Rep_OperationScrap(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> vendorid, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var vendoridParameter = vendorid.HasValue ?
                new ObjectParameter("vendorid", vendorid) :
                new ObjectParameter("vendorid", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rep_OperationScrap_Result>("IProc_Rep_OperationScrap", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, vendoridParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_VATSlsInvoice_Result> IProc_Prnt_VATSlsInvoice(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_VATSlsInvoice_Result>("IProc_Prnt_VATSlsInvoice", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_AccAdjust_Result> IProc_Prnt_AccAdjust(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_AccAdjust_Result>("IProc_Prnt_AccAdjust", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_AccReceive_Result> IProc_Prnt_AccReceive(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_AccReceive_Result>("IProc_Prnt_AccReceive", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<AProc_Rpt_GLFinancialStatment_Result> AProc_Rpt_GLFinancialStatment(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string fromDate, string toDate, string cc_Code, Nullable<int> level, Nullable<int> isAuthVchr, Nullable<int> isNewVchr, Nullable<int> exZero, Nullable<int> repTyp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var cc_CodeParameter = cc_Code != null ?
                new ObjectParameter("cc_Code", cc_Code) :
                new ObjectParameter("cc_Code", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var isAuthVchrParameter = isAuthVchr.HasValue ?
                new ObjectParameter("IsAuthVchr", isAuthVchr) :
                new ObjectParameter("IsAuthVchr", typeof(int));
    
            var isNewVchrParameter = isNewVchr.HasValue ?
                new ObjectParameter("IsNewVchr", isNewVchr) :
                new ObjectParameter("IsNewVchr", typeof(int));
    
            var exZeroParameter = exZero.HasValue ?
                new ObjectParameter("ExZero", exZero) :
                new ObjectParameter("ExZero", typeof(int));
    
            var repTypParameter = repTyp.HasValue ?
                new ObjectParameter("RepTyp", repTyp) :
                new ObjectParameter("RepTyp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AProc_Rpt_GLFinancialStatment_Result>("AProc_Rpt_GLFinancialStatment", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, fromDateParameter, toDateParameter, cc_CodeParameter, levelParameter, isAuthVchrParameter, isNewVchrParameter, exZeroParameter, repTypParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_Collect_Result> IProc_Prnt_Collect(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_Collect_Result>("IProc_Prnt_Collect", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Rep_CollectList_Result> IProc_Rep_CollectList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> trType, string fromDate, string toDate, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var trTypeParameter = trType.HasValue ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rep_CollectList_Result>("IProc_Rep_CollectList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, trTypeParameter, fromDateParameter, toDateParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccBankDetail_Result> IProc_Rpt_AccBankDetail(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string accCode, Nullable<int> status, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var accCodeParameter = accCode != null ?
                new ObjectParameter("AccCode", accCode) :
                new ObjectParameter("AccCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccBankDetail_Result>("IProc_Rpt_AccBankDetail", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, accCodeParameter, statusParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccBankSummary_Result> IProc_Rpt_AccBankSummary(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string accCode, Nullable<int> status, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var accCodeParameter = accCode != null ?
                new ObjectParameter("AccCode", accCode) :
                new ObjectParameter("AccCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccBankSummary_Result>("IProc_Rpt_AccBankSummary", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, accCodeParameter, statusParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_ItemStockDetail_Result> IProc_Rpt_ItemStockDetail(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> itemFamId, Nullable<int> itemID, Nullable<int> status, Nullable<int> balType, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemFamIdParameter = itemFamId.HasValue ?
                new ObjectParameter("ItemFamId", itemFamId) :
                new ObjectParameter("ItemFamId", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var balTypeParameter = balType.HasValue ?
                new ObjectParameter("BalType", balType) :
                new ObjectParameter("BalType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_ItemStockDetail_Result>("IProc_Rpt_ItemStockDetail", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, itemFamIdParameter, itemIDParameter, statusParameter, balTypeParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_OperationList_Result> IProc_Rpt_OperationList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string fromDate, string toDate, Nullable<int> vndId, Nullable<int> operationId, Nullable<int> slsID, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var vndIdParameter = vndId.HasValue ?
                new ObjectParameter("vndId", vndId) :
                new ObjectParameter("vndId", typeof(int));
    
            var operationIdParameter = operationId.HasValue ?
                new ObjectParameter("OperationId", operationId) :
                new ObjectParameter("OperationId", typeof(int));
    
            var slsIDParameter = slsID.HasValue ?
                new ObjectParameter("SlsID", slsID) :
                new ObjectParameter("SlsID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_OperationList_Result>("IProc_Rpt_OperationList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, fromDateParameter, toDateParameter, vndIdParameter, operationIdParameter, slsIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_ItemStockValue_Result> IProc_Rpt_ItemStockValue(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> itemFamId, Nullable<int> itemID, Nullable<int> type, Nullable<int> status, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemFamIdParameter = itemFamId.HasValue ?
                new ObjectParameter("ItemFamId", itemFamId) :
                new ObjectParameter("ItemFamId", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_ItemStockValue_Result>("IProc_Rpt_ItemStockValue", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, itemFamIdParameter, itemIDParameter, typeParameter, statusParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rep_OperationSum_Result> IProc_Rep_OperationSum(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rep_OperationSum_Result>("IProc_Rep_OperationSum", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Rep_OperationSumInternal_Result> IProc_Rep_OperationSumInternal(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rep_OperationSumInternal_Result>("IProc_Rep_OperationSumInternal", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Rep_AccVendorList_Result> IProc_Rep_AccVendorList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> isCredit, Nullable<int> catID, Nullable<int> groupID, Nullable<int> vendType, Nullable<int> balStatus)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var isCreditParameter = isCredit.HasValue ?
                new ObjectParameter("IsCredit", isCredit) :
                new ObjectParameter("IsCredit", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var vendTypeParameter = vendType.HasValue ?
                new ObjectParameter("VendType", vendType) :
                new ObjectParameter("VendType", typeof(int));
    
            var balStatusParameter = balStatus.HasValue ?
                new ObjectParameter("BalStatus", balStatus) :
                new ObjectParameter("BalStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rep_AccVendorList_Result>("IProc_Rep_AccVendorList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, isCreditParameter, catIDParameter, groupIDParameter, vendTypeParameter, balStatusParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccVendorCollDetail_Result> IProc_Rpt_AccVendorCollDetail(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> groupID, Nullable<int> customerID, Nullable<int> vendType, Nullable<int> status, Nullable<int> balType, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var vendTypeParameter = vendType.HasValue ?
                new ObjectParameter("VendType", vendType) :
                new ObjectParameter("VendType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var balTypeParameter = balType.HasValue ?
                new ObjectParameter("BalType", balType) :
                new ObjectParameter("BalType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccVendorCollDetail_Result>("IProc_Rpt_AccVendorCollDetail", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, groupIDParameter, customerIDParameter, vendTypeParameter, statusParameter, balTypeParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccVendorCollSummary_Result> IProc_Rpt_AccVendorCollSummary(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> groupID, Nullable<int> customerID, Nullable<int> vendType, Nullable<int> status, Nullable<int> balType, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var vendTypeParameter = vendType.HasValue ?
                new ObjectParameter("VendType", vendType) :
                new ObjectParameter("VendType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var balTypeParameter = balType.HasValue ?
                new ObjectParameter("BalType", balType) :
                new ObjectParameter("BalType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccVendorCollSummary_Result>("IProc_Rpt_AccVendorCollSummary", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, groupIDParameter, customerIDParameter, vendTypeParameter, statusParameter, balTypeParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccVendorDetail_Result> IProc_Rpt_AccVendorDetail(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> groupID, Nullable<int> customerID, Nullable<int> vendType, Nullable<int> status, Nullable<int> balType, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var vendTypeParameter = vendType.HasValue ?
                new ObjectParameter("VendType", vendType) :
                new ObjectParameter("VendType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var balTypeParameter = balType.HasValue ?
                new ObjectParameter("BalType", balType) :
                new ObjectParameter("BalType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccVendorDetail_Result>("IProc_Rpt_AccVendorDetail", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, groupIDParameter, customerIDParameter, vendTypeParameter, statusParameter, balTypeParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_ItemStockSummary_Result> IProc_Rpt_ItemStockSummary(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> itemFamId, Nullable<int> itemID, Nullable<int> type, Nullable<int> status, Nullable<int> balType, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemFamIdParameter = itemFamId.HasValue ?
                new ObjectParameter("ItemFamId", itemFamId) :
                new ObjectParameter("ItemFamId", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var balTypeParameter = balType.HasValue ?
                new ObjectParameter("BalType", balType) :
                new ObjectParameter("BalType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_ItemStockSummary_Result>("IProc_Rpt_ItemStockSummary", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, itemFamIdParameter, itemIDParameter, typeParameter, statusParameter, balTypeParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccCustomerLedger_Result> IProc_Rpt_AccCustomerLedger(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> groupID, Nullable<int> customerID, Nullable<int> salesManID, Nullable<int> status, Nullable<int> balType, string fromDate, string todate, Nullable<int> orderby)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var salesManIDParameter = salesManID.HasValue ?
                new ObjectParameter("SalesManID", salesManID) :
                new ObjectParameter("SalesManID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var balTypeParameter = balType.HasValue ?
                new ObjectParameter("BalType", balType) :
                new ObjectParameter("BalType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var orderbyParameter = orderby.HasValue ?
                new ObjectParameter("orderby", orderby) :
                new ObjectParameter("orderby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccCustomerLedger_Result>("IProc_Rpt_AccCustomerLedger", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, groupIDParameter, customerIDParameter, salesManIDParameter, statusParameter, balTypeParameter, fromDateParameter, todateParameter, orderbyParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccCustomerSummary_Result> IProc_Rpt_AccCustomerSummary(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> groupID, Nullable<int> customerID, Nullable<int> salesManID, Nullable<int> status, Nullable<int> balType, string fromDate, string todate, Nullable<int> orderby)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var salesManIDParameter = salesManID.HasValue ?
                new ObjectParameter("SalesManID", salesManID) :
                new ObjectParameter("SalesManID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var balTypeParameter = balType.HasValue ?
                new ObjectParameter("BalType", balType) :
                new ObjectParameter("BalType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var orderbyParameter = orderby.HasValue ?
                new ObjectParameter("orderby", orderby) :
                new ObjectParameter("orderby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccCustomerSummary_Result>("IProc_Rpt_AccCustomerSummary", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, groupIDParameter, customerIDParameter, salesManIDParameter, statusParameter, balTypeParameter, fromDateParameter, todateParameter, orderbyParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccVendorLedger_Result> IProc_Rpt_AccVendorLedger(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> groupID, Nullable<int> customerID, Nullable<int> vendType, Nullable<int> status, Nullable<int> balType, string fromDate, string todate, Nullable<int> orderby)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var vendTypeParameter = vendType.HasValue ?
                new ObjectParameter("VendType", vendType) :
                new ObjectParameter("VendType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var balTypeParameter = balType.HasValue ?
                new ObjectParameter("BalType", balType) :
                new ObjectParameter("BalType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var orderbyParameter = orderby.HasValue ?
                new ObjectParameter("orderby", orderby) :
                new ObjectParameter("orderby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccVendorLedger_Result>("IProc_Rpt_AccVendorLedger", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, groupIDParameter, customerIDParameter, vendTypeParameter, statusParameter, balTypeParameter, fromDateParameter, todateParameter, orderbyParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccVendorSummary_Result> IProc_Rpt_AccVendorSummary(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> groupID, Nullable<int> customerID, Nullable<int> vendType, Nullable<int> status, Nullable<int> balType, string fromDate, string todate, Nullable<int> orderby)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var vendTypeParameter = vendType.HasValue ?
                new ObjectParameter("VendType", vendType) :
                new ObjectParameter("VendType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var balTypeParameter = balType.HasValue ?
                new ObjectParameter("BalType", balType) :
                new ObjectParameter("BalType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var orderbyParameter = orderby.HasValue ?
                new ObjectParameter("orderby", orderby) :
                new ObjectParameter("orderby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccVendorSummary_Result>("IProc_Rpt_AccVendorSummary", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, groupIDParameter, customerIDParameter, vendTypeParameter, statusParameter, balTypeParameter, fromDateParameter, todateParameter, orderbyParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_StkIssue_Result> IProc_Prnt_StkIssue(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_StkIssue_Result>("IProc_Prnt_StkIssue", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_StkIssueList_Result> IProc_Rpt_StkIssueList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> issueTypeID, string fromDate, string toDate, Nullable<int> storeID, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var issueTypeIDParameter = issueTypeID.HasValue ?
                new ObjectParameter("IssueTypeID", issueTypeID) :
                new ObjectParameter("IssueTypeID", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("storeID", storeID) :
                new ObjectParameter("storeID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_StkIssueList_Result>("IProc_Rpt_StkIssueList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, issueTypeIDParameter, fromDateParameter, toDateParameter, storeIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_ItemPeriodSummary_Result> IProc_Rpt_ItemPeriodSummary(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> braCode, Nullable<int> storeid, Nullable<int> itemTypeID, Nullable<int> catID, Nullable<int> itemFamId, Nullable<int> itemID, Nullable<int> type, Nullable<int> balType, Nullable<int> finYear, Nullable<int> fromPrd, Nullable<int> toPrd)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var itemTypeIDParameter = itemTypeID.HasValue ?
                new ObjectParameter("ItemTypeID", itemTypeID) :
                new ObjectParameter("ItemTypeID", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemFamIdParameter = itemFamId.HasValue ?
                new ObjectParameter("ItemFamId", itemFamId) :
                new ObjectParameter("ItemFamId", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var balTypeParameter = balType.HasValue ?
                new ObjectParameter("BalType", balType) :
                new ObjectParameter("BalType", typeof(int));
    
            var finYearParameter = finYear.HasValue ?
                new ObjectParameter("FinYear", finYear) :
                new ObjectParameter("FinYear", typeof(int));
    
            var fromPrdParameter = fromPrd.HasValue ?
                new ObjectParameter("FromPrd", fromPrd) :
                new ObjectParameter("FromPrd", typeof(int));
    
            var toPrdParameter = toPrd.HasValue ?
                new ObjectParameter("ToPrd", toPrd) :
                new ObjectParameter("ToPrd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_ItemPeriodSummary_Result>("IProc_Rpt_ItemPeriodSummary", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, braCodeParameter, storeidParameter, itemTypeIDParameter, catIDParameter, itemFamIdParameter, itemIDParameter, typeParameter, balTypeParameter, finYearParameter, fromPrdParameter, toPrdParameter);
        }
    
        public virtual ObjectResult<IProc_DashAccounts_Result> IProc_DashAccounts(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_DashAccounts_Result>("IProc_DashAccounts", compParameter);
        }
    
        public virtual int Iproc_DashBalances(Nullable<int> comp, ObjectParameter custOp, ObjectParameter custEnd, ObjectParameter vndOp, ObjectParameter vndEnd)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Iproc_DashBalances", compParameter, custOp, custEnd, vndOp, vndEnd);
        }
    
        public virtual ObjectResult<Iproc_DashOperation_Result> Iproc_DashOperation(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Iproc_DashOperation_Result>("Iproc_DashOperation", compParameter);
        }
    
        public virtual ObjectResult<Iproc_DashPurchase_Result> Iproc_DashPurchase(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Iproc_DashPurchase_Result>("Iproc_DashPurchase", compParameter);
        }
    
        public virtual ObjectResult<IProc_DashSales_Result> IProc_DashSales(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_DashSales_Result>("IProc_DashSales", compParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_SlsInvoice_Result> IProc_Prnt_SlsInvoice(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_SlsInvoice_Result>("IProc_Prnt_SlsInvoice", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccCustomerAging_Result> IProc_Rpt_AccCustomerAging(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> groupID, Nullable<int> customerID, Nullable<int> status, Nullable<int> balType, string todate, Nullable<int> agtype)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var balTypeParameter = balType.HasValue ?
                new ObjectParameter("BalType", balType) :
                new ObjectParameter("BalType", typeof(int));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var agtypeParameter = agtype.HasValue ?
                new ObjectParameter("Agtype", agtype) :
                new ObjectParameter("Agtype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccCustomerAging_Result>("IProc_Rpt_AccCustomerAging", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, groupIDParameter, customerIDParameter, statusParameter, balTypeParameter, todateParameter, agtypeParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccVendorAging_Result> IProc_Rpt_AccVendorAging(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> catID, Nullable<int> groupID, Nullable<int> customerID, Nullable<int> status, Nullable<int> balType, string todate, Nullable<int> agtype)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var balTypeParameter = balType.HasValue ?
                new ObjectParameter("BalType", balType) :
                new ObjectParameter("BalType", typeof(int));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var agtypeParameter = agtype.HasValue ?
                new ObjectParameter("Agtype", agtype) :
                new ObjectParameter("Agtype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccVendorAging_Result>("IProc_Rpt_AccVendorAging", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, catIDParameter, groupIDParameter, customerIDParameter, statusParameter, balTypeParameter, todateParameter, agtypeParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_ItemPurchaseDetail_Result> IProc_Rpt_ItemPurchaseDetail(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> vendorid, Nullable<int> payType, Nullable<int> groupType, Nullable<int> catID, Nullable<int> itemFamId, Nullable<int> itemID, Nullable<int> status, string fromDate, string todate, Nullable<int> invType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var vendoridParameter = vendorid.HasValue ?
                new ObjectParameter("vendorid", vendorid) :
                new ObjectParameter("vendorid", typeof(int));
    
            var payTypeParameter = payType.HasValue ?
                new ObjectParameter("PayType", payType) :
                new ObjectParameter("PayType", typeof(int));
    
            var groupTypeParameter = groupType.HasValue ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemFamIdParameter = itemFamId.HasValue ?
                new ObjectParameter("ItemFamId", itemFamId) :
                new ObjectParameter("ItemFamId", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var invTypeParameter = invType.HasValue ?
                new ObjectParameter("invType", invType) :
                new ObjectParameter("invType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_ItemPurchaseDetail_Result>("IProc_Rpt_ItemPurchaseDetail", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, vendoridParameter, payTypeParameter, groupTypeParameter, catIDParameter, itemFamIdParameter, itemIDParameter, statusParameter, fromDateParameter, todateParameter, invTypeParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_ItemPurchaseSum_Result> IProc_Rpt_ItemPurchaseSum(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> vendorid, Nullable<int> payType, Nullable<int> groupType, Nullable<int> catID, Nullable<int> itemFamId, Nullable<int> itemID, Nullable<int> status, string fromDate, string todate, Nullable<int> invType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var vendoridParameter = vendorid.HasValue ?
                new ObjectParameter("vendorid", vendorid) :
                new ObjectParameter("vendorid", typeof(int));
    
            var payTypeParameter = payType.HasValue ?
                new ObjectParameter("PayType", payType) :
                new ObjectParameter("PayType", typeof(int));
    
            var groupTypeParameter = groupType.HasValue ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemFamIdParameter = itemFamId.HasValue ?
                new ObjectParameter("ItemFamId", itemFamId) :
                new ObjectParameter("ItemFamId", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var invTypeParameter = invType.HasValue ?
                new ObjectParameter("invType", invType) :
                new ObjectParameter("invType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_ItemPurchaseSum_Result>("IProc_Rpt_ItemPurchaseSum", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, vendoridParameter, payTypeParameter, groupTypeParameter, catIDParameter, itemFamIdParameter, itemIDParameter, statusParameter, fromDateParameter, todateParameter, invTypeParameter);
        }
    
        public virtual int IProc_GetLastPurchasePrice(Nullable<int> comp, Nullable<int> bra, Nullable<int> itemid, Nullable<int> vendorid, Nullable<int> storeid, Nullable<int> invid, ObjectParameter vndLastPrice, ObjectParameter vndLastTr, ObjectParameter vndLastDate, ObjectParameter lastPurchase, ObjectParameter curcost)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            var vendoridParameter = vendorid.HasValue ?
                new ObjectParameter("vendorid", vendorid) :
                new ObjectParameter("vendorid", typeof(int));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var invidParameter = invid.HasValue ?
                new ObjectParameter("invid", invid) :
                new ObjectParameter("invid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IProc_GetLastPurchasePrice", compParameter, braParameter, itemidParameter, vendoridParameter, storeidParameter, invidParameter, vndLastPrice, vndLastTr, vndLastDate, lastPurchase, curcost);
        }
    
        public virtual int IProc_GetLastSalePrice(Nullable<int> comp, Nullable<int> bra, Nullable<int> itemid, Nullable<int> customerid, Nullable<int> storeid, Nullable<int> invid, ObjectParameter custLastPrice, ObjectParameter custLastTr, ObjectParameter custLastDate, ObjectParameter lastPrice, ObjectParameter lastPurchase, ObjectParameter curcost)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var invidParameter = invid.HasValue ?
                new ObjectParameter("invid", invid) :
                new ObjectParameter("invid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IProc_GetLastSalePrice", compParameter, braParameter, itemidParameter, customeridParameter, storeidParameter, invidParameter, custLastPrice, custLastTr, custLastDate, lastPrice, lastPurchase, curcost);
        }
    
        public virtual ObjectResult<AProc_Rpt_GLAccountStatment_Result> AProc_Rpt_GLAccountStatment(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, string fromDate, string toDate, string cc_Code, string fromAccCode, string toAccCode, Nullable<int> isAuthVchr, Nullable<int> isNewVchr, Nullable<int> exZero, Nullable<int> includeInvTR)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var cc_CodeParameter = cc_Code != null ?
                new ObjectParameter("cc_Code", cc_Code) :
                new ObjectParameter("cc_Code", typeof(string));
    
            var fromAccCodeParameter = fromAccCode != null ?
                new ObjectParameter("FromAccCode", fromAccCode) :
                new ObjectParameter("FromAccCode", typeof(string));
    
            var toAccCodeParameter = toAccCode != null ?
                new ObjectParameter("ToAccCode", toAccCode) :
                new ObjectParameter("ToAccCode", typeof(string));
    
            var isAuthVchrParameter = isAuthVchr.HasValue ?
                new ObjectParameter("IsAuthVchr", isAuthVchr) :
                new ObjectParameter("IsAuthVchr", typeof(int));
    
            var isNewVchrParameter = isNewVchr.HasValue ?
                new ObjectParameter("IsNewVchr", isNewVchr) :
                new ObjectParameter("IsNewVchr", typeof(int));
    
            var exZeroParameter = exZero.HasValue ?
                new ObjectParameter("ExZero", exZero) :
                new ObjectParameter("ExZero", typeof(int));
    
            var includeInvTRParameter = includeInvTR.HasValue ?
                new ObjectParameter("IncludeInvTR", includeInvTR) :
                new ObjectParameter("IncludeInvTR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AProc_Rpt_GLAccountStatment_Result>("AProc_Rpt_GLAccountStatment", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, fromDateParameter, toDateParameter, cc_CodeParameter, fromAccCodeParameter, toAccCodeParameter, isAuthVchrParameter, isNewVchrParameter, exZeroParameter, includeInvTRParameter);
        }
    
        public virtual ObjectResult<IProc_Prnt_PurReceive_Result> IProc_Prnt_PurReceive(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> tRId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var tRIdParameter = tRId.HasValue ?
                new ObjectParameter("TRId", tRId) :
                new ObjectParameter("TRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Prnt_PurReceive_Result>("IProc_Prnt_PurReceive", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, tRIdParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_PurReceiveList_Result> IProc_Rpt_PurReceiveList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> trType, string fromDate, string toDate, Nullable<int> vendorID, Nullable<int> salesmanID, Nullable<int> cashType, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var trTypeParameter = trType.HasValue ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var salesmanIDParameter = salesmanID.HasValue ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(int));
    
            var cashTypeParameter = cashType.HasValue ?
                new ObjectParameter("CashType", cashType) :
                new ObjectParameter("CashType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_PurReceiveList_Result>("IProc_Rpt_PurReceiveList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, trTypeParameter, fromDateParameter, toDateParameter, vendorIDParameter, salesmanIDParameter, cashTypeParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_AccSlsCashInvoiceList_Result> IProc_Rpt_AccSlsCashInvoiceList(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> trType, string fromDate, string toDate, Nullable<int> paymentType, Nullable<int> customerID, Nullable<int> salesmanID, Nullable<int> cashBoxID, string mobileNo, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var trTypeParameter = trType.HasValue ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var paymentTypeParameter = paymentType.HasValue ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var salesmanIDParameter = salesmanID.HasValue ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(int));
    
            var cashBoxIDParameter = cashBoxID.HasValue ?
                new ObjectParameter("CashBoxID", cashBoxID) :
                new ObjectParameter("CashBoxID", typeof(int));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_AccSlsCashInvoiceList_Result>("IProc_Rpt_AccSlsCashInvoiceList", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, trTypeParameter, fromDateParameter, toDateParameter, paymentTypeParameter, customerIDParameter, salesmanIDParameter, cashBoxIDParameter, mobileNoParameter, statusParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_ItemSalesDetail_Result> IProc_Rpt_ItemSalesDetail(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> customerid, Nullable<int> payType, Nullable<int> groupType, Nullable<int> salesType, Nullable<int> catID, Nullable<int> itemFamId, Nullable<int> itemID, Nullable<int> status, string fromDate, string todate, Nullable<int> invType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            var payTypeParameter = payType.HasValue ?
                new ObjectParameter("PayType", payType) :
                new ObjectParameter("PayType", typeof(int));
    
            var groupTypeParameter = groupType.HasValue ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(int));
    
            var salesTypeParameter = salesType.HasValue ?
                new ObjectParameter("SalesType", salesType) :
                new ObjectParameter("SalesType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemFamIdParameter = itemFamId.HasValue ?
                new ObjectParameter("ItemFamId", itemFamId) :
                new ObjectParameter("ItemFamId", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var invTypeParameter = invType.HasValue ?
                new ObjectParameter("invType", invType) :
                new ObjectParameter("invType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_ItemSalesDetail_Result>("IProc_Rpt_ItemSalesDetail", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, customeridParameter, payTypeParameter, groupTypeParameter, salesTypeParameter, catIDParameter, itemFamIdParameter, itemIDParameter, statusParameter, fromDateParameter, todateParameter, invTypeParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_ItemSalesSum_Result> IProc_Rpt_ItemSalesSum(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> customerid, Nullable<int> payType, Nullable<int> groupType, Nullable<int> salesType, Nullable<int> catID, Nullable<int> itemFamId, Nullable<int> itemID, Nullable<int> status, string fromDate, string todate, Nullable<int> invType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            var payTypeParameter = payType.HasValue ?
                new ObjectParameter("PayType", payType) :
                new ObjectParameter("PayType", typeof(int));
    
            var groupTypeParameter = groupType.HasValue ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(int));
    
            var salesTypeParameter = salesType.HasValue ?
                new ObjectParameter("SalesType", salesType) :
                new ObjectParameter("SalesType", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var itemFamIdParameter = itemFamId.HasValue ?
                new ObjectParameter("ItemFamId", itemFamId) :
                new ObjectParameter("ItemFamId", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var invTypeParameter = invType.HasValue ?
                new ObjectParameter("invType", invType) :
                new ObjectParameter("invType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_ItemSalesSum_Result>("IProc_Rpt_ItemSalesSum", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, customeridParameter, payTypeParameter, groupTypeParameter, salesTypeParameter, catIDParameter, itemFamIdParameter, itemIDParameter, statusParameter, fromDateParameter, todateParameter, invTypeParameter);
        }
    
        public virtual ObjectResult<IProc_Rpt_SlsInvoiceListVer2_Result> IProc_Rpt_SlsInvoiceListVer2(Nullable<int> comp, Nullable<int> bra, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> trType, Nullable<int> slsInvSrc, string fromDate, string toDate, Nullable<int> customerID, Nullable<int> salesmanID, Nullable<int> cashType, Nullable<int> status, Nullable<int> operationID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var trTypeParameter = trType.HasValue ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(int));
    
            var slsInvSrcParameter = slsInvSrc.HasValue ?
                new ObjectParameter("SlsInvSrc", slsInvSrc) :
                new ObjectParameter("SlsInvSrc", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var salesmanIDParameter = salesmanID.HasValue ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(int));
    
            var cashTypeParameter = cashType.HasValue ?
                new ObjectParameter("CashType", cashType) :
                new ObjectParameter("CashType", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var operationIDParameter = operationID.HasValue ?
                new ObjectParameter("OperationID", operationID) :
                new ObjectParameter("OperationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IProc_Rpt_SlsInvoiceListVer2_Result>("IProc_Rpt_SlsInvoiceListVer2", compParameter, braParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, trTypeParameter, slsInvSrcParameter, fromDateParameter, toDateParameter, customerIDParameter, salesmanIDParameter, cashTypeParameter, statusParameter, operationIDParameter);
        }
    }
}
